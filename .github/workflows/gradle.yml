# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Build

on: push

env:
  GITHUBRUNID: ${{ github.run_id }}

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    environment: demo
    steps:
    - uses: actions/checkout@v2
    - name: Install Java
      id: sdkman
      run: |
        curl -s "https://get.sdkman.io" | bash
        source "/home/runner/.sdkman/bin/sdkman-init.sh"
        sdk install java 17.0.3.6.1-amzn
        sdk default java 17.0.3.6.1-amzn
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Setup Gradle For Caching
      uses: gradle/gradle-build-action@v2
      with:
        cache-read-only: false
    - name: Build with Gradle
      run: |
        source "/home/runner/.sdkman/bin/sdkman-init.sh"
        sdk use java 17.0.3.6.1-amzn
        ./gradlew localDistro

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: grok
        path: build/distribution/local/elasticsearch-8.3.0-SNAPSHOT/**/[j]*.jar

  ScanWithVirusTotal:
    name: ScanWithVirusTotal
    needs: Build
    runs-on: ubuntu-latest
    environment: demo
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: grok
          path: grok_artifact
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: ./grok_artifact/
      - name: VirusTotal Scan
        uses: crazy-max/ghaction-virustotal@v3
        with:
          vt_api_key: ${{ secrets.VT_API_TOKEN }}
          files: |
            ./grok_artifact/**/[j]*.jar

  ScanVulnerabilities:
    name: Trivy-Scan
    needs: Build
    runs-on: ubuntu-latest
    environment: demo
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: grok
          path: grok_artifact
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: ./grok_artifact/
      - name: Vulnerabilities Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'rootfs'
          scan-ref: './grok_artifact/*.jar'
          severity: 'CRITICAL,HIGH'

  BspotAction:
    needs: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out blindspot action
        uses: actions/checkout@v3
        with:
          repository: blindspot-security/blindspot-action
          ref: feature/update-action
          token: ${{ secrets.PAT }}
          path: ./blindspot-action
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: grok
          path: artifact
      - name: list of folder after build
        run: ls -R
      - name: Blindspot Security Action
        id: blindspot
        uses: ./blindspot-action
        # timeout-minutes: 5 // Uncomment to limit step run.
        with:
          api_token: ${{ secrets.BS_TOKEN }}
          organization: ${{ secrets.BS_ORGANIZATION }}
          credentials: ${{ secrets.BS_CREDS }}
          api_url: ${{ secrets.BS_API }}
          artifact_path: artifact

#  Release:
#    name: Release
#    needs: ScanWithVirusTotal
#    runs-on: ubuntu-latest
#    environment: demo
#    steps:
#      - name: Grant execute permission for gradlew
#        run: echo "Releasing"


